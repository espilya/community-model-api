openapi: 3.0.0
info:
  title: Community Model API
  description: API for accessing data generated by the Community Model and for updating
    user data used by the Community Model for finding communities
  contact:
    email: gjimenez@ucm.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v.1.1
servers:
- url: /v1.1/
tags:
- name: perspectives
  description: Operations about computing perspectives among communities(?)
- name: communities
  description: Operations related to information about communities
- name: users
  description: Operations related to users in communities
- name: similarity
  description: Operations about computing similarity among communities
- name: jobs monitor
  description: Monitor the status of a job
paths:
  /jobs/{jobId}:
    get:
      tags:
      - jobs monitor
      summary: Job status
      description: Monitor the status of a job. Shows if the status of the job is finished or in progress, and returns data if it is finished.
      operationId: none
      parameters:
      - name: jobId
        in: path
        description: ID of the job to monitor
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/jobId'
      responses:
        "200":
          description: Job status
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/jobStarted'
                  - $ref: '#/components/schemas/jobCompleted'
        "400":
          description: Job does not exist
      x-content-type: application/json
  /perspectives:
    get:
      tags:
      - perspectives
      summary: Get all perspectives in the model
      description: Access to a list of the perspectives in the community model
      operationId: getPerspectives
      responses:
        "200":
          description: A list with the perspectives in the model
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/perspective'
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: Community model does not exist
      x-swagger-router-controller: Perspectives
  /perspectives/{perspectiveId}:
    get:
      tags:
      - perspectives
      summary: Get one perspective  
      description: Returns information about a perspective
      operationId: getPerspectiveById
      parameters:
      - name: perspectiveId
        in: path
        description: ID of perspective to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perspective'
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: invalid perspective id
      x-swagger-router-controller: Perspectives
  /perspectives/{perspectiveId}/communities:
    get:
      tags:
      - perspectives
      summary: Communities with the same perspective
      description: Returns a list with the communities 
      operationId: listPerspectiveCommunities
      parameters:
      - name: perspectiveId
        in: path
        description: ID of the perspective to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/community'
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: invalid community id
      x-swagger-router-controller: Perspectives
  /perspective:
    post:
      tags:
      - perspectives
      summary: Add perspective
      description: Add perspective <description>
      operationId: PostPerspective
      requestBody:
        description: Perspective
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/perspective'
        required: true
      responses:
        "204":
          description: Added
        "400":
          description: error
      x-swagger-router-controller: Perspectives
  /communities:
    get:
      tags:
      - communities
      summary: Get all communities in the model
      description: Access to a list of the communities in the community model
      operationId: getCommunities
      responses:
        "200":
          description: A list with the communities in the model
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/community'
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: Community model does not exist
      x-swagger-router-controller: Communities
  /communities/{communityId}:
    get:
      tags:
      - communities
      summary: Get community description and explanation
      description: Returns information about a community
      operationId: getCommunityById
      parameters:
      - name: communityId
        in: path
        description: ID of community to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/community'
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /communities/{communityId}/users:
    get:
      tags:
      - communities
      summary: Users who belong to a community
      description: Returns a list with the ids of the users who belong to a community
      operationId: listCommunityUsers
      parameters:
      - name: communityId
        in: path
        description: ID of community to return
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /users/{userId}/communities:
    get:
      tags:
      - users
      summary: Communities that a user belongs
      description: Returns a list with the ids of the communities that the user belongs to
      operationId: listUserCommunities
      parameters:
      - name: userId
        in: path
        description: ID of user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
                x-content-type: application/json
        "400":
          description: invalid user id
      x-swagger-router-controller: Users
  /users/{userId}/update-generated-content:
    post:
      tags:
      - users
      summary: Update community model with new user generated content
      description: This service is employed to inform the Community Model the users who were created/updated in the User Model.
      operationId: updateUsers
      parameters:
      - name: userId
        in: path
        description: ID of user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      requestBody:
        description: A list with objects that represent the information about the user that will be added to the community model
        content:
          application/json:
            schema:
              type: array
              description: A list of user generated content objects for the Community
                Model
              items:
                $ref: '#/components/schemas/user-generated-content'
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Invalid userId userId in the URL differs form the userid in the body request
      x-swagger-router-controller: Users
  /communities/{communityId}/similarity:
    get:
      tags:
      - similarity
      summary: K-most similar communities
      description: Returns a list with the k most similar communities to the chosen one in the model.
      operationId: computeKmostSimilar
      parameters:
      - name: communityId
        in: path
        description: ID of the target community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      - name: k
        in: query
        description: Size of the result (k most similar communities)
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: A list with the similarity scores between the parameter community and the k-most similar communities, in descending order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/similarityScore'
                x-content-type: application/json
        "400":
          description: Invalid communityId or query parameters
      x-swagger-router-controller: Similarity
  /communities/{communityId}/similarity/{otherCommunityId}:
    get:
      tags:
      - similarity
      summary: Similarity between two communities
      description: Returns a similarity score between two communities.
      operationId: computeSimilarity
      parameters:
      - name: communityId
        in: path
        description: ID of the target community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      - name: otherCommunityId
        in: path
        description: ID of the other community to compute similarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: A similarity score object between targetCommunity and otherCommunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid communityIds (target or other)
      x-swagger-router-controller: Similarity
  /communities/{communityId}/dissimilarity:
    get:
      tags:
      - similarity
      summary: K-most dissimilar communities
      description: Returns a list with the k most dissimilar communities to the chosen one in the model.
      operationId: computeKmostDissimilar
      parameters:
      - name: communityId
        in: path
        description: ID of the target community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      - name: k
        in: query
        description: Size of the result (k most dissimilar communities)
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: A list with the dissimilarity scores between the parameter community and the k-most dissimilar communities, in descending order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/similarityScore'
                x-content-type: application/json
        "400":
          description: Invalid community-id or query parameters
      x-swagger-router-controller: Similarity
  /communities/{communityId}/dissimilarity/{otherCommunityId}:
    get:
      tags:
      - similarity
      summary: Dissimilarity between two communities
      description: Returns the dissimilarity score between two communities
      operationId: computeDissimilarity
      parameters:
      - name: communityId
        in: path
        description: ID of the target community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      - name: otherCommunityId
        in: path
        description: ID of the other community to compute dissimilarity
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
      responses:
        "200":
          description: The dissimilarity score object between targetCommunity and otherCommunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/similarityScore'
        "400":
          description: Invalid community-ids (target or other)
      x-swagger-router-controller: Similarity
components:
  schemas:
    jobId:
      type: string
      description: Unique job id
      example: 4351
    jobStarted:
      type: object
      title: jobStarted
      properties:
        job:
          type: object
          title: job
          properties:
            path:
              type: string
              description: path
              example: /jobs/4351
            jobId:
              $ref: '#/components/schemas/jobId'
            name:
              type: string
              description: name
              example: CM Update
            job-state:
              type: string
              description: job state
              example: STARTED
            job-status:
              type: string
              description: job status
              example: INPROGRESS
            data:
              type: object
              description: The job is not done yet
    jobCompleted:
      type: object
      title: jobCompleted
      properties:
        job:
          type: object
          title: job
          properties:
            path:
              type: string
              description: path
              example: /jobs/4351
            jobId:
              $ref: '#/components/schemas/jobId'
            name:
              type: string
              description: name
              example: CM Update
            job-state:
              type: string
              description: job state
              example: COMPLETED
            job-status:
              type: string
              description: job status
              example: SUCCESS
            data:
              oneOf:
                - $ref: '#/components/schemas/perspective'
                - $ref: '#/components/schemas/community'
                - $ref: '#/components/schemas/listPerspectives'
                - $ref: '#/components/schemas/listCommunities'
    listPerspectives:
      type: array
      description: List of perspectives
      items:
        $ref: '#/components/schemas/perspective'
    listCommunities:
      type: array
      description: List of communities
      items:
        $ref: '#/components/schemas/community'
    id:
      type: string
      description: Unique id
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    user-generated-content:
      required:
        - id
        - origin
        - pname
        - pvalue
        - source_id
        - userid
      type: object
      properties:
        id:
          type: string
          description: Unique id (generated by the User Model) for the user generated content (UGC).
          example: "11541"
        userid:
          type: string
          description: Unique user id
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        origin:
          type: string
          description: Unique id for the item or concept in the museum that this user generated content refers to.
          example: 90e6d701748f08514b01
        source_id:
          type: string
          description: Unique id for the UGC that this content is derived from
          example: 90e6d701748f08514b01
        source:
          type: string
          description: Description about the UGC that this content is derived from
          example: Content description
        pname:
          type: string
          description: Name of the property included in this UGC
          example: DemographicGender
        pvalue:
          type: string
          description: Value of the property included in this UGC
          example: F (for Female value)
        context:
          type: string
          description: Context of the property included in this UGC
          example: application P:DemographicsPrep
        datapoints:
          type: number
          description: Number of datapoint used to generate this UGC
          example: 0
    param:
      type: string
      description: Param
      example: param
    sim_function:
      type: object
      title: similarity_function
      properties:
        name:
          type: string
          description: name
          example: name
        weight:
          type: number
          description: weight
          example: 2
        params:
              type: array
              description: Params
              items:
                $ref: '#/components/schemas/param'
              example:
                - "paramA"
                - "paramB"
        on_attribute:
          type: object
          title: on_attribute
          properties:
            att_name:
              type: string
              description: att_name
              example: att_name
            att_type:
              type: string
              description: att_type
              example: att_type
    job:
      required:
        - path
      type: object
      properties:
        path:
          type: string
          description: job
          example: /jobs/{jobId}
    perspective:
      required:
        - id
        - name
        - algorithm
        - similarity_functions
        - user_attributes
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          type: string
          description: Perspective name
          example: name
        algorithm:
          type: object
          title: Algorithm used for this perspective
          properties:
            name:
                type: string
                description: The name of the algorithm
                example: optics
            params:
              type: array
              description: Params
              items:
                $ref: '#/components/schemas/param'
              example:
                - "paramA"
                - "paramB"
        similarity_functions:
          type: array
          description: similarity_functions
          items: 
            $ref: '#/components/schemas/sim_function'
        user_attributes:
          type: array
          items:
            type: object
            title: user_attributes
            properties:
              att_name:
                type: string
                description: att_name
                example: att_name
              att_type:
                type: string
                description: att_type
                example: att_type
    community:
      required:
        - id
        - name
        - explanation
        - perspectiveId
        - users
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          type: string
          description: Community name
          example: elderly
        perspectiveId:
          type: string
          description: perspectiveId
          example: perspectiveId
        explanation:
          type: string
          description: community description (maybe empty). It can be computed by the explanation module
          example: People whose age is above 65
        users:
          type: array
          description: A list with the users who belong to the community
          example:
          - "23"
          - "24"
          items:
            $ref: '#/components/schemas/id'
      example:
        name: elderly
        id: d290f1ee-6c54-4b01-90e6-d701748f0851
        explanation: People whose age is above 65
        perspectiveId: "101"
        users:
        - "23"
        - "24"
    similarityScore:
      type: object
      description: Schema for results that compute similarity values
      properties:
        target-community-id:
          $ref: '#/components/schemas/id'
        other-community-id:
          $ref: '#/components/schemas/id'
        value:
          type: number
          description: Similarity/dissimilarity value between the specified communities
        similarity-function:
          type: string
          description: Similarity function employed to compute this similarity score
      example:
        target-community-id: d290f1ee-6c54-4b01-90e6-d701748f0851
        other-community-id: d290f1ee-6c54-4b01-90e6-d701748f0853
        similarity-function: similarity-function
        value: 0.80082819046101150206595775671303272247314453125
